{"ast":null,"code":"var _jsxFileName = \"/Users/nsujela/Desktop/connectRN/shift-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport './App.css';\nimport { ShiftsTable } from './ShiftsTable';\nimport { SetShiftModal } from './SetShiftModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nursesList, setNursesList] = useState([]);\n  const [shiftsList, setShiftsList] = useState([]);\n  const [justSaved, setJustSaved] = React.useState(false);\n  const fetchNurses = async () => {\n    const response = await fetch('http://localhost:9001/nurses');\n    const respText = await response.text();\n    if (response.status !== 200) throw Error(respText.message);\n    return respText;\n  };\n  const fetchShifts = async () => {\n    const response = await fetch('http://localhost:9001/shifts');\n    const respText = await response.text();\n    if (response.status !== 200) throw Error(respText.message);\n    console.log(\"SHIFTS FETCHED\");\n    console.log(respText);\n    return respText;\n  };\n  const saveShiftAssignment = async (shiftId, nurseID) => {\n    console.log(\"In saveShiftAssignment\");\n    console.log({\n      shiftId,\n      nurseID\n    });\n    const requestOptions = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'text/plain'\n      },\n      body: nurseID\n    };\n    fetch('http://localhost:9001/shifts/' + shiftId + '/' + nurseID, requestOptions).then(res => {\n      if (res.status !== 200) {\n        console.log(\"error\");\n      } else {\n        res.json().then(data => {\n          console.log(data);\n          fetchShifts().then(() => {\n            console.log(\"DONE SAVING!!!\");\n          });\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    console.log(\"UPDATING TABLE DATA\");\n    setJustSaved(false);\n    fetchNurses().then(res => {\n      // console.log({ res });\n      // console.log(JSON.parse(res));\n\n      // Need to parse because response is a string literal containing an array of objects\n      const nurses = JSON.parse(res);\n      setNursesList(nurses);\n      console.log(\"End of fetchNurses in useEffect -- Success\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"End of fetchNurses in useEffect -- Failure\");\n    });\n    fetchShifts().then(res => {\n      // console.log({ res });\n      // console.log(JSON.parse(res));\n\n      // Need to parse because response is a string literal containing an array of objects\n      const shifts = JSON.parse(res);\n      setShiftsList(shifts);\n      console.log(\"End of fetchShifts in useEffect -- Success\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"End of fetchShifts in useEffect -- Failure\");\n    });\n  }, [justSaved]);\n  useEffect(() => {\n    console.log(\"Start of useEffect\");\n    fetchNurses().then(res => {\n      // console.log({ res });\n      // console.log(JSON.parse(res));\n\n      // Need to parse because response is a string literal containing an array of objects\n      const nurses = JSON.parse(res);\n      setNursesList(nurses);\n      console.log(\"End of fetchNurses in useEffect -- Success\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"End of fetchNurses in useEffect -- Failure\");\n    });\n    fetchShifts().then(res => {\n      // console.log({ res });\n      // console.log(JSON.parse(res));\n\n      // Need to parse because response is a string literal containing an array of objects\n      const shifts = JSON.parse(res);\n      setShiftsList(shifts);\n      console.log(\"End of fetchShifts in useEffect -- Success\");\n    }).catch(err => {\n      console.log(err);\n      console.log(\"End of fetchShifts in useEffect -- Failure\");\n    });\n  }, []);\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Shift Tracker \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set-shift-asgnmt-btn\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpen,\n        variant: \"contained\",\n        children: \"Set Shift Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SetShiftModal, {\n      isOpen: open,\n      handleOpen: handleOpen,\n      handleClose: handleClose,\n      shiftsData: shiftsList,\n      nursesData: nursesList,\n      saveShiftAssignment: saveShiftAssignment,\n      setJustSaved: setJustSaved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shift-table\",\n      children: /*#__PURE__*/_jsxDEV(ShiftsTable, {\n        shiftsData: shiftsList,\n        nursesData: nursesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GudosJ5VTP+2y6T3bdN4y/yUMQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","ShiftsTable","SetShiftModal","App","nursesList","setNursesList","shiftsList","setShiftsList","justSaved","setJustSaved","fetchNurses","response","fetch","respText","text","status","Error","message","fetchShifts","console","log","saveShiftAssignment","shiftId","nurseID","requestOptions","method","headers","body","then","res","json","data","nurses","JSON","parse","catch","err","shifts","open","setOpen","handleOpen","handleClose"],"sources":["/Users/nsujela/Desktop/connectRN/shift-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Button } from '@mui/material';\n\nimport './App.css';\n\nimport { ShiftsTable } from './ShiftsTable';\nimport { SetShiftModal } from './SetShiftModal';\n\n\nfunction App() {\n  const [nursesList, setNursesList] = useState([]);\n  const [shiftsList, setShiftsList] = useState([]);\n  const [justSaved, setJustSaved] = React.useState(false);\n  \n  const fetchNurses = async () => {\n    const response = await fetch('http://localhost:9001/nurses');\n    const respText = await response.text();\n    if (response.status !== 200) throw Error(respText.message);\n\n    return respText;\n  };\n\n  const fetchShifts = async () => {\n    const response = await fetch('http://localhost:9001/shifts');\n    const respText = await response.text();\n    if (response.status !== 200) throw Error(respText.message);\n\n    console.log(\"SHIFTS FETCHED\");\n    console.log(respText);\n\n    return respText;\n  };\n\n  const saveShiftAssignment = async (shiftId, nurseID) => {\n    console.log(\"In saveShiftAssignment\");\n    console.log({ shiftId, nurseID });\n\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'text/plain' },\n      body: nurseID\n    };\n\n    fetch('http://localhost:9001/shifts/' + shiftId + '/' + nurseID, requestOptions)\n      .then(res => {\n        if (res.status !== 200) {\n          console.log(\"error\")\n        } else {\n          res.json().then(data => {\n            console.log(data);\n            fetchShifts().then(() => {\n              console.log(\"DONE SAVING!!!\")\n            });\n          })\n        }\n      });\n\n\n  };\n\n  useEffect(() => {\n    console.log(\"UPDATING TABLE DATA\");\n    setJustSaved(false);\n    fetchNurses()\n      .then(res => {\n        // console.log({ res });\n        // console.log(JSON.parse(res));\n\n        // Need to parse because response is a string literal containing an array of objects\n        const nurses = JSON.parse(res);\n        setNursesList(nurses);\n\n        console.log(\"End of fetchNurses in useEffect -- Success\");\n      }).catch(err => {\n        console.log(err);\n        console.log(\"End of fetchNurses in useEffect -- Failure\");\n      });\n\n    fetchShifts()\n      .then(res => {\n        // console.log({ res });\n        // console.log(JSON.parse(res));\n\n        // Need to parse because response is a string literal containing an array of objects\n        const shifts = JSON.parse(res);\n        setShiftsList(shifts);\n\n        console.log(\"End of fetchShifts in useEffect -- Success\");\n      }).catch(err => {\n        console.log(err);\n        console.log(\"End of fetchShifts in useEffect -- Failure\");\n      });\n\n  }, [justSaved])\n\n  useEffect(() => {\n    console.log(\"Start of useEffect\");\n    fetchNurses()\n      .then(res => {\n        // console.log({ res });\n        // console.log(JSON.parse(res));\n\n        // Need to parse because response is a string literal containing an array of objects\n        const nurses = JSON.parse(res);\n        setNursesList(nurses);\n\n        console.log(\"End of fetchNurses in useEffect -- Success\");\n      }).catch(err => {\n        console.log(err);\n        console.log(\"End of fetchNurses in useEffect -- Failure\");\n      });\n\n    fetchShifts()\n      .then(res => {\n        // console.log({ res });\n        // console.log(JSON.parse(res));\n\n        // Need to parse because response is a string literal containing an array of objects\n        const shifts = JSON.parse(res);\n        setShiftsList(shifts);\n\n        console.log(\"End of fetchShifts in useEffect -- Success\");\n      }).catch(err => {\n        console.log(err);\n        console.log(\"End of fetchShifts in useEffect -- Failure\");\n      });\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div className=\"App\">\n      <h1> Shift Tracker </h1>\n\n      <div className=\"set-shift-asgnmt-btn\">\n        <Button onClick={handleOpen} variant=\"contained\">Set Shift Assignment</Button>\n      </div>\n\n      <SetShiftModal isOpen={open}\n        handleOpen={handleOpen}\n        handleClose={handleClose}\n        shiftsData={shiftsList}\n        nursesData={nursesList}\n        saveShiftAssignment={saveShiftAssignment}\n        setJustSaved={setJustSaved}\n      />\n\n      <div className=\"shift-table\">\n        <ShiftsTable shiftsData={shiftsList} nursesData={nursesList} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}